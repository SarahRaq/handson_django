# Generated by Django 2.1.4 on 2019-01-07 20:57

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, primary_key=True, serialize=False, verbose_name='username')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Avaliador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Coordenador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CriterioAvaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, verbose_name='Nome')),
                ('nota_minima', models.FloatField(verbose_name='Nota Mínima')),
                ('nota_maxima', models.FloatField(verbose_name='Nota Maxima')),
                ('ajuda_avaliador', models.CharField(max_length=500, verbose_name='Nome')),
                ('incremento_nota', models.PositiveIntegerField(verbose_name='Incremento da Nota')),
            ],
        ),
        migrations.CreateModel(
            name='Cronograma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.CharField(max_length=200, verbose_name='Etapa')),
                ('marco', models.CharField(max_length=200, verbose_name='Marco')),
                ('inicio', models.DateField(verbose_name='Data Inicial')),
                ('fim', models.DateField(verbose_name='Data Final')),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
            ],
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(help_text='Discente/Bolsista', max_length=100, verbose_name='Tipo')),
                ('programa', models.CharField(max_length=100, verbose_name='Programa')),
                ('numero', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número')),
                ('siglaUO', models.CharField(help_text='Ex.: DG-EAD/IFRN', max_length=100, verbose_name='Unidade organizacional')),
                ('linkEdital', models.URLField(help_text='Informe o LINK onde está o edital', max_length=300, verbose_name='URL')),
                ('grupo', models.CharField(max_length=200, null=True, verbose_name='Grupo')),
                ('descricao', models.CharField(max_length=300, verbose_name='Descrição')),
                ('ano', models.PositiveIntegerField(help_text='Digite o ano', verbose_name='Ano')),
                ('periodo', models.PositiveIntegerField(choices=[(1, '1º Período'), (2, '2º Período')], verbose_name='Período letivo')),
                ('data_publicacao', models.DateTimeField(verbose_name='Data de publicação')),
            ],
        ),
        migrations.CreateModel(
            name='EstrategiaClassificacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriaco', models.CharField(help_text='Exemplo: Inscrição sem anexos', max_length=200, verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='Fase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('tipo_classificacao', models.PositiveIntegerField(choices=[(1, 'Eliminatória'), (2, 'Classificatória')], verbose_name='Tipo de classificação')),
                ('aproveitamento_min', models.PositiveIntegerField(help_text='Nota necessária para passar', verbose_name='Aproveitamento mínimo')),
                ('fator_habilitacao', models.PositiveIntegerField(help_text='Quantidade máxima de cadidatos que serão selecionados', verbose_name='Fator habilitação')),
                ('edital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Edital')),
            ],
        ),
        migrations.CreateModel(
            name='MotivoNotaZero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriaco', models.CharField(help_text='Exemplo: Inscrição sem anexos', max_length=200, verbose_name='Descrição')),
                ('fase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Fase')),
            ],
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('existe_taxa', models.BooleanField(default=False)),
                ('valor_taxa', models.DecimalField(decimal_places=2, max_digits=7)),
                ('vencimento_boleto', models.DateField()),
                ('edital', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Edital')),
            ],
        ),
        migrations.CreateModel(
            name='Vaga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curso', models.CharField(max_length=200, verbose_name='Curso')),
                ('vaga', models.CharField(max_length=100, verbose_name='Vaga')),
                ('numero_vagas', models.PositiveIntegerField(verbose_name='Número de vagas')),
                ('edital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Edital')),
            ],
        ),
        migrations.AddField(
            model_name='estrategiaclassificacao',
            name='fase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Fase'),
        ),
        migrations.AddField(
            model_name='documento',
            name='fase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Fase'),
        ),
        migrations.AddField(
            model_name='cronograma',
            name='fase',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Fase'),
        ),
        migrations.AddField(
            model_name='criterioavaliacao',
            name='fase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Fase'),
        ),
        migrations.AddField(
            model_name='coordenador',
            name='edital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Edital'),
        ),
        migrations.AddField(
            model_name='coordenador',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='avaliador',
            name='fase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cadastro_edital.Fase'),
        ),
        migrations.AddField(
            model_name='avaliador',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
